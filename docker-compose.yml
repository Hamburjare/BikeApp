version: '3.8'

networks:
  back-tier:
    driver: bridge


services:
  db:
    image: mariadb
    container_name: database
    restart: unless-stopped
    environment:
      MARIADB_DATABASE: bikeapp
      MARIADB_ROOT_PASSWORD: Abc123
    ports:
      - '3306:3306'
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
    networks:
      - back-tier
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_allowed_packet=500M
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
  import:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    container_name: import
    restart: "no"
    volumes:
      - ./csvimport:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - back-tier
    working_dir: /app
    command: sh -c "dotnet restore  && dotnet run"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    image: node:alpine
    container_name: frontend
    restart: unless-stopped
    ports:
      - '8000:8000'
    volumes:
      - ./frontend:/app
    environment:
      - VITE_API_URL=http://localhost:5000/api
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - back-tier
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    ports:
      - '5000:5000'
      - '5001:5001'
    environment:
      - ASPNETCORE_HTTP_PORT=5000
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/https/aspnetapp.pfx
    depends_on:
      db:
        condition: service_healthy
    networks:
      - back-tier
    healthcheck:
      test: ["CMD", 'curl', 'http://localhost:5000/health' ]
      interval: 1m
      timeout: 10s
      retries: 5
      start_period: 1m
    extra_hosts:
      - "host.docker.internal:host-gateway"



volumes:
  dbdata: